namespace ProjectEuler
{
    using System.Collections.Generic;
    using System.Linq;

    public partial class Solutions
    {
        /// <summary>
        /// <see href="https://projecteuler.net/problem=8">Project Euler: Problem 8</see>
        /// </summary>
        /// <returns>23514624000</returns>
        public static long Problem8()
        {
            string snum = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

            List<short> numl = new List<short>();
            List<long> resultList = new List<long>();

            foreach (char c in snum)
            {
                numl.Add(short.Parse(c.ToString()));
            }

            for (int i = 0; i < numl.Count; i++)
            {
                try
                {
                    List<short> cList = new List<short>
                    {
                        numl[i],
                        numl[i + 1],
                        numl[i + 2],
                        numl[i + 3],
                        numl[i + 4],
                        numl[i + 5],
                        numl[i + 6],
                        numl[i + 7],
                        numl[i + 8],
                        numl[i + 9],
                        numl[i + 10],
                        numl[i + 11],
                        numl[i + 12],
                    };

                    long product = 1;

                    foreach (short n in cList)
                    {
                        product *= n;
                    }

                    resultList.Add(product);
                }
                catch
                {
                }
            }

            resultList.Sort();
            return resultList.Last();
        }
    }
}